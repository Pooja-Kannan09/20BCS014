{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\thang\\\\React\\\\react-trains-master\\\\react-trains-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\thang\\\\React\\\\react-trains-master\\\\react-trains-master\\\\src\\\\components\\\\DataDisplay\\\\DataDisplay.js\";\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './DataDisplay.css';\n\nvar formatTime = function formatTime(dateTime) {\n  //returns a time in the correct timezone\n  return new Intl.DateTimeFormat('default', {\n    hour: 'numeric',\n    minute: 'numeric'\n  }).format(new Date(dateTime.toString()));\n};\n\nvar DataDisplay = function DataDisplay(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var filteredData = props.filteredData.sort(function (a, b) {\n    return a.scheduledTime > b.scheduledTime ? 1 : -1;\n  }) // sorting by time\n  .map(function (train) {\n    return _objectSpread({}, train, {\n      time: train.actualTime && formatTime(train.actualTime) !== formatTime(train.scheduledTime) ? //only if actual and scheduled arrival time differ, create special class (red) for actual time\n      React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, formatTime(train.actualTime)), React.createElement(\"span\", {\n        className: \"under\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"(\", formatTime(train.scheduledTime), \")\")) : formatTime(train.scheduledTime)\n    });\n  }).map(function (train) {\n    return React.createElement(\"tr\", {\n      key: train.trainNumber + '_' + train.scheduledTime // added timestamps to avoid duplicate keys\n      ,\n      className: train.cancelled ? 'cancelled' : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, train.trainNumber), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, train.origin), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, train.destination), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, train.time, ' ', train.cancelled ? React.createElement(\"span\", {\n      className: \"cancelled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, t('Cancelled')) : null));\n  });\n  return React.createElement(\"table\", {\n    className: \"DataDisplay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, t('Train')), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, t('Origin')), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, t('Destination')), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.display === 'arrival' ? t('Arrival') : t('Departure')))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, filteredData));\n};\n\nexport default DataDisplay;","map":{"version":3,"sources":["C:\\Users\\thang\\React\\react-trains-master\\react-trains-master\\src\\components\\DataDisplay\\DataDisplay.js"],"names":["React","useTranslation","formatTime","dateTime","Intl","DateTimeFormat","hour","minute","format","Date","toString","DataDisplay","props","t","filteredData","sort","a","b","scheduledTime","map","train","time","actualTime","trainNumber","cancelled","origin","destination","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './DataDisplay.css';\n\nconst formatTime = dateTime => {\n  //returns a time in the correct timezone\n  return new Intl.DateTimeFormat('default', {\n    hour: 'numeric',\n    minute: 'numeric'\n  }).format(new Date(dateTime.toString()));\n};\n\nconst DataDisplay = props => {\n  const { t } = useTranslation();\n  const filteredData = props.filteredData\n    .sort((a, b) => (a.scheduledTime > b.scheduledTime ? 1 : -1)) // sorting by time\n    .map(train => ({\n      ...train,\n      time:\n        train.actualTime &&\n        formatTime(train.actualTime) !== formatTime(train.scheduledTime) ? ( //only if actual and scheduled arrival time differ, create special class (red) for actual time\n          <>\n            <span className=\"red\">{formatTime(train.actualTime)}</span>\n            <span className=\"under\">({formatTime(train.scheduledTime)})</span>\n          </>\n        ) : (\n          formatTime(train.scheduledTime)\n        )\n    }))\n    .map(train => (\n      <tr\n        key={train.trainNumber + '_' + train.scheduledTime} // added timestamps to avoid duplicate keys\n        className={train.cancelled ? 'cancelled' : null}\n      >\n        <td>{train.trainNumber}</td>\n        <td>{train.origin}</td>\n        <td>{train.destination}</td>\n        <td>\n          {train.time}{' '}\n          {train.cancelled ? (\n            <span className=\"cancelled\">{t('Cancelled')}</span>\n          ) : null}\n        </td>\n      </tr>\n    ));\n\n  return (\n    <table className=\"DataDisplay\">\n      <thead>\n        <tr>\n          <th>{t('Train')}</th>\n          <th>{t('Origin')}</th>\n          <th>{t('Destination')}</th>\n          <th>{props.display === 'arrival' ? t('Arrival') : t('Departure')}</th>\n        </tr>\n      </thead>\n      <tbody>{filteredData}</tbody>\n    </table>\n  );\n};\n\nexport default DataDisplay;\n"]},"metadata":{},"sourceType":"module"}